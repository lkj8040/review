package com.liukuijian.bigdata.sz.chapter05

object Scala04_function_hell {
  def main(args: Array[String]): Unit = {
    // Scala是完全面向函数的，万物皆函数
    //函数可以做什么：函数可以作为变量，可以作为参数，还可以作为返回值
    //Scala中的函数的参数个数最多只能有22个
    def f1():Unit={
      println("f1....")
    }

    //1 函数作为变量使用
    //如果函数没有参数，那么在调用时，可以不使用()
    //如果想要把函数作为一个整体传递给变量，可以使用下划线
    //那么变量可以当函数来使用
    val f = f1 _ //通过自动类型推断来判断
    //明确声明了f11的类型为函数类型
    val f11: () => Unit = f1
    println(f)
    f()

    //2 函数作为参数来使用
    //函数作为参数来使用:函数(函数名:函数类型)
    //函数类型：(参数列表)=>返回值类型
    def f2(f:(Int,Int)=>Int):Int={
      f(10,20)
    }
    //2.1自定义函数作为参数
    def f22(x:Int, y:Int):Int={
      x+y
    }
    f2((x:Int,y:Int)=>{x+y})
    //2.2使用匿名函数：如果匿名函数中函数的类型可以推断，那么也可以省略
    f2((x,y)=>{x+y})
    //2.3如果函数逻辑只有一行代码，那么函数体的花括号可以省略
    f2((x,y) => x+y)
    //2.4如果参数只使用了一次，而且有序，那么可以省略参数，使用下划线代替指定位置的参数
    f2(_+_)


  }
}
